name: release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:

  build:
    strategy:
      matrix:
        archtecture: [ "amd64", "arm64" ]
        include:
        - archtecture: amd64
          goos: linux
          arch: amd64
        - archtecture: arm64
          goos: linux
          arch: arm64


    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.5'
        cache-dependency-path: ./go.sum
        cache: true

    - run: go mod download

    - name: setup node
      uses: actions/setup-node@v4
      with:
        node-version: 21

    - name: install pnpm
      run: npm install -g pnpm

    - name: install pnpm dependencies
      run: pnpm install --prefix ./front

    - name: build frontend
      run: pnpm run --dir ./front build

    - name: Build for ${{ matrix.arch }}
      run: GCO_ENABLED=0 GOOS=$goos GOARCH=${{ matrix.arch }} go build -ldflags="-s -w" -trimpath -o dist/wol

    - name: Archive
      run: |
        cp .env.example dist/.env.example
        cp config.schema.json dist/config.schema.json
        cp config.json.example dist/config.json.example
        cp setup-service.sh dist/setup-service.sh
        cp -r public dist/public
        zip -r -j release-${{ matrix.arch }}-${{ github.ref_name }}.zip dist

    - name: Download artifact to get url to upload to release
      uses: actions/download-artifact@v1
      with:
        name: artifact

    - name: Get url to upload to release from artifact
      id: get_url
      run: |
        url=$(cat artifact/url.txt)
        echo "##[set-output name=upload_url;]$url"

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_url.outputs.upload_url }}
        asset_path: ./release-${{ matrix.arch }}-${{ github.ref_name }}.zip
        asset_name: release-${{ matrix.arch }}-${{ github.ref_name }}.zip
        asset_content_type: application/zip
